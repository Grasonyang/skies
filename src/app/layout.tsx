import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import I18nProvider from './i18n-provider';
import type { ReactNode } from 'react';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

function detectLocaleFromPath(pathname: string | null) {
  if (!pathname) return 'zh-TW';
  const first = pathname.split('/').filter(Boolean)[0];
  if (first === 'en') return 'en';
  return 'zh-TW';
}

export default function RootLayout({ children }: Readonly<{ children: ReactNode }>) {
  // naive detection: client will pick up injected globals; server fallback to zh-TW
  const pathname = typeof window !== 'undefined' ? window.location.pathname : null;
  const locale = detectLocaleFromPath(pathname);

  return (
    <html lang={locale === 'en' ? 'en' : 'zh-TW'}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased w-screen max-w-screen min-h-screen max-h-screen`}
      >
        <I18nProvider locale={locale}>{children}</I18nProvider>
      </body>
    </html>
  );
}
